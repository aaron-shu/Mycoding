/*
牛客每次考试完，都会有一个成绩表(grade)，如下:
mysql> select * from grade;
+----+------+-------+
| id | job  | score |
+----+------+-------+
|  1 | C++  | 11001 |
|  2 | C++  | 10000 |
|  3 | C++  |  9000 |
|  4 | Java | 12000 |
|  5 | Java | 13000 |
|  6 | 前端 | 12000 |
|  7 | 前端 | 11000 |
|  8 | 前端 |  9999 |
+----+------+-------+

第1行表示用户id为1的用户选择了C++岗位并且考了11001分
。。。
第8行表示用户id为8的用户选择了前端岗位并且考了9999分

请你写一个sql语句查询各个岗位分数升序排列之后的中位数位置的范围，并且按job升序排序，结果如下:
+------+-------+-----+
| job  | start | end |
+------+-------+-----+
| C++  |     2 |   2 |
| Java |     1 |   2 |
| 前端 |     2 |   2 |
+------+-------+-----+
解释:
第1行表示C++岗位的中位数位置范围为[2,2]，也就是2。因为C++岗位总共3个人，是奇数，所以中位数位置为2是正确的(即位置为2的10000是中位数)
第2行表示Java岗位的中位数位置范围为[1,2]。因为Java岗位总共2个人，是偶数，所以要知道中位数，需要知道2个位置的数字，而因为只有2个人，所以中位数位置为[1,2]是正确的(即需要知道位置为1的12000与位置为2的13000才能计算出中位数为12500)
第3行表示前端岗位的中位数位置范围为[2,2]，也就是2。因为前端岗位总共3个人，是奇数，所以中位数位置为2是正确的(即位置为2的11000是中位数)
 */
select job,
(case when count(score)%2=0 then count(score) div 2 else count(score) div 2+1 end) 'start',
count(score) div 2+1 'end'
from grade
group by job